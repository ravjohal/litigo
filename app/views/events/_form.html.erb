<%= simple_form_for(@event || @event = Event.new) do |f| %>
  <%= f.error_notification %>

<% if action_name == "index" || action_name == "edit" %>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">

        <a class="close" style="padding-top: 15px;" data-dismiss="modal">Ã—</a>

        <h1>Calendar Event</h1>
       
      </div>
    
      <div class="modal-body">
<% end %>
        <table class="case-form table-condensed">
          <tbody>
          <tr>
            <td>
              <strong>Calendar:</strong>
            </td>
            <td>
              <%= f.select :calendar_id, @firm.active_calendars.includes(:namespace).where.not("calendars.name LIKE ? OR calendars.name Like ?", "%Birthday%", "%Holiday%").map { |cal| ["#{cal.namespace.full_name}: #{cal.name}", cal.id] }, :include_blank => true, :class => 'table-input' %>
            </td>
          </tr>
             <tr>
            <td>
            </td>
            <td style="font-size: 10px;">
              <% unless @event.new_record? %>
                <% if @event.created_by == 0 && @event.last_updated_by == 0 %>
                  Created By: <%= "External Calendar, last synced on #{simple_format_datetime @event.created_at}" -%>
                <% elsif @event.created_by == 0 && @event.last_updated_by != 0 %>
                  Created By: <%= "External Calendar, last synced on #{simple_format_datetime @event.created_at}" -%>
                  <br />
                  Updated By: <%= "#{User.find(@event.last_updated_by).name} on #{simple_format_datetime @event.updated_at}" -%>
                <% elsif @event.last_updated_by == 0 && @event.created_by != 0  %>
                  Created By: <%= "#{@event.user.name} on #{simple_format_datetime @event.created_at}" -%>
                  <br />
                  Updated By: <%= "External Calendar, last synced on #{simple_format_datetime @event.updated_at}" -%>
                <% else %>
                  <% if @event.created_at == @event.updated_at %>
                    Created By: <%= "#{@event.user.name} on #{simple_format_datetime @event.created_at}" -%>
                  <% else %>
                    Created By: <%= "#{@event.user.name} on #{simple_format_datetime @event.created_at}" -%>
                    <br />
                    Updated By: <%= "#{User.find(@event.last_updated_by).name} on #{simple_format_datetime @event.updated_at}" -%>
                  <% end %>
                <% end %>
              <% end %>
            </td>
          </tr>
          <tr>
            <td>
              <strong>Event Name:</strong>
            </td>
            <td>
              <%= f.text_field :title, label: false, :class => 'table-input' %>
            </td>
          </tr>
          <tr>
            <td>
              <strong>Location:</strong>
            </td>
            <td>
              <%= f.text_field :location, label: false, :class => 'table-input' %>
            </td>
          </tr>
          <tr>
            <td>
              <strong>Invitees:</strong><span id="invite" title="Invitees will receive an email invite and the event will be added to their calendar" style="cursor: pointer; float: right; margin-right: 5px; font-size: 14px;" class="glyphicon glyphicon-question-sign"></span>
            </td>
            <td>
              <%= f.input :participants, label: false, :input_html => {:id => "invitee_select", :value => "#{@event.participants.map { |participant| participant.email }.join(',')}"}, :class => 'table-input' %>
            </td>
          </tr>
          <tr>
            <td>
              <strong>Start Time:</strong>
            </td>
            <td>
              <%= f.text_field :start_date, value: @event.present? ? @event.try(:starts_at).try(:strftime, '%-m/%d/%Y') : Time.now.strftime('%-m/%d/%Y'), id: 'event_start_date' %>
              <%= f.text_field :start_time, value: @event.present? ? @event.try(:starts_at).try(:strftime, '%I:%M %p') : Time.now.strftime('%I:%M %p'), id: 'event_start_time', class: "#{@event.all_day ? 'no-display' : ''}" %>
            </td>
          </tr>
          <tr>
            <td>
              <strong>End Time:</strong>
            </td>
            <td>
              <%= f.text_field :end_date, value: @event.present? ? @event.try(:ends_at).try(:strftime, '%-m/%d/%Y') : Time.now.strftime('%-m/%d/%Y'), id: 'event_end_date' %>
              <%= f.text_field :end_time, value: @event.present? ? @event.try(:ends_at).try(:strftime, '%I:%M %p') : (Time.now+1.hour).strftime('%I:%M %p'), id: 'event_end_time', class: "#{@event.all_day ? 'no-display' : ''}" %>
            </td>
          </tr>

          <tr>
            <td>
              <strong>All Day:</strong>
            </td>
            <td>
              <%= f.check_box :all_day, {}, true, false %>
            </td>
          </tr>

          <tr>
            <td class="big-row">
              <strong>Description:</strong>
            </td>
            <td class="big-row">
              <%= f.text_area :description, label: false, :class => 'table-text' %>
            </td>
          </tr>
        <!-- Uncoment when nylas recurring events would be working fine -->
          <% if @event.new_record? %>
          <tr>
            <td><strong>Recurring event:</strong></td>
            <td><%= f.check_box :recur, {checked: @event.event_series_id.present?}, true, false %></td>
          </tr>

          <tr class="recur_block">
            <td><strong>Repeat:</strong></td>
            <td><%= f.select :period, Event::REPEATS %></td>
          </tr>

          <tr class="recur_block">
            <td><strong>Every:</strong></td>
            <td><%= f.select :frequency, (1..30).to_a %> <span id = "period">day(s)</span></td>
          </tr>

          <tr class="recur_block">
            <td><strong>Series Start:</strong></td>
            <td><%= f.text_field :recur_start_date, value: @event.event_series.present? ? @event.try(:event_series).try(:starts_at).try(:strftime, '%-m/%d/%Y') : Time.now.strftime('%-m/%d/%Y') %></td>
          </tr>

          <tr class="recur_block">
            <td><strong>Series End:</strong></td>
            <td><%= f.text_field :recur_end_date, value: @event.event_series.present? ? @event.try(:event_series).try(:ends_at).try(:strftime, '%-m/%d/%Y') : (Time.now+5.days).strftime('%-m/%d/%Y') %></td>
          </tr>
          <% end %>

          <% if @event.event_series.present? %>
            <tr>
              <td><strong>Repeat:</strong></td>
              <td><%= @event.try(:event_series).try(:period) %>, frequency: <%= @event.try(:event_series).try(:frequency) %></td>
            </tr>
            <tr>
              <td><strong>From:</strong></td>
              <td><%= simple_format_date @event.try(:event_series).try(:recur_start_date) %></td>
            </tr>
            <tr>
              <td><strong>Until:</strong></td>
              <td><%= simple_format_date @event.try(:event_series).try(:recur_end_date) %></td>
            </tr>
          <% end %>

          <%= f.hidden_field :event_series_id %>
          <%= f.hidden_field :update_all_events %>

          </tbody>
        </table>
        <br>
<% if action_name == "index" || action_name == "edit" %>
      </div>
      <!--end of modal-body-->

      <div class="modal-footer">
        <div class="pull-left">
          <a class="close" data-dismiss="modal">Cancel</a>
        </div>
<% end %>
        <div class="form-actions">
          <% if !@event.new_record? %>
            <%# link_to @event, :id => 'delete_event', :class => 'btn btn-danger', method: :delete, data: {confirm: 'WARNING! Deleting an event will remove the event from all calendars. Would you like to continue?'} do %>
              <!--Delete-->
            <%# end %>
            <%= link_to 'Delete', '#', :id => 'delete_event', :class => 'btn btn-danger' %>
          <% end %>
          <%= f.button :submit, :class => "btn btn-info", :style => 'font-size: 18px;' %>
        </div>
<% if action_name == "index" || action_name == "edit" %>
      </div>
      <!--end of modal-footer-->
    </div>
    <!--end of modal-content-->
  </div><!--end of modal-dialog-->
<% end %>
<% end %>
<script>
  $(document).ready(function () {
    $('#case_select, #attorney_select, select').select2();
    $('#event_start_date, #event_end_date, #event_recur_start_date, #event_recur_end_date').datetimepicker({
      pickTime: false,
      format: 'M/D/YYYY'
    });
    $('#event_start_time, #event_end_time').datetimepicker({
      pickDate: false
    });

    $('#event_start_date, #event_start_time').change(function (e) {
      var start_date = $('#event_start_date').val();
      var start_time = $('#event_start_time').val();
      var end_date_time = moment(start_date + ' ' + start_time, 'MM/DD/YYYY HH:mm A').add(1, 'h')
      $('#event_end_date').val(end_date_time.format('M/D/YYYY')).change();
      $('#event_end_time').val(end_date_time.format('h:mm A')).change();
      $('#event_recur_start_date').val(start_date);
    });

    $('#invitee_select').tagit({
      availableTags: <%= @emails_autocomplete.to_json.html_safe %>
    });

    if ($('#event_recur').is(':checked')) {
      $('.recur_block').show();
    }
  });

  $('#event_recur').change(function (e) {
    if($(this).is(':checked')){
      $('.recur_block').show();
    } else {
      $('.recur_block').hide();
    }
  });
    $('#event_period').change(function (e) {
      var period = $(this).val();
      var period_val = 'day(s)';
      switch (period) {
        case 'Daily':
          period_val = 'day(s)';
          break;
        case 'Weekly':
          period_val = 'week(s)';
          break;
        case 'Monthly':
          period_val = 'month(s)';
          break;
        case 'Yearly':
          period_val = 'year(s)';
          break;

        default:
          period_val = 'day(s)';
      }
      $('#period').html(period_val);
    });
    $('#event_all_day').change(function (e) {
      if($(this).is(':checked')) {
        $('#event_start_time').val('').hide();
        $('#event_end_time').val('').hide();
      } else {
        var sd = new Date();
        var ed = new Date();
        ed.setHours(ed.getHours()+1);
        $('#event_start_time').val(formatAMPM(sd)).show();
        $('#event_end_time').val(formatAMPM(ed)).show();
      }
    });
    $('.edit_event').submit(function () {
      if($('#event_event_series_id').val() == '') {
        return true;
      } else {
        if(confirm('Would you like to update all recurring events?')){
          $('#event_update_all_events').val(true);
        } else {
          $('#event_update_all_events').val(false);
        };
        return true;
      }
    });
    $('#delete_event').click(function (e) {
      e.preventDefault();
      if(confirm('WARNING! Deleting an event will remove the event from all calendars. Would you like to continue?')){
        if($('#event_event_series_id').val() != '') {
          var delete_all = confirm('Would you like to delete all recurring events?');
        }
        $.ajax({
          url: "/events/<%= @event.id %>",
          type: 'DELETE',
          dataType: "json",
          data: {delete_all: delete_all},
          success: function(data){
            window.location.href = "/events";
          }
        });
      } else {
        $('.close').click();
      }
    })

</script>
<script type='text/javascript'>
  $(function () {
    $('#invite').tipsy({gravity: 's', fade: true});
    $('#owner').tipsy({gravity: 's', fade: true});
  });
</script>